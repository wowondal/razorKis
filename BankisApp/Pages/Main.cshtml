@page
@using System.Text.Json
@model MainModel
@{
    ViewData["Title"] = "메인 페이지";
}

<div class="container-fluid mt-5">
    <div class="row">
        <div class="col-md-8 offset-md-2">
            <div class="card">
                <div class="card-header">
                    <h2 class="card-title">@Model.Username 님, 환영합니다.</h2>
                </div>
                <div class="card-body">
                    <div class="form-group mb-3 d-flex align-items-center">
                        <label for="accountSelect" style="margin-right: 10px;">등록된 계좌</label>
                        <select class="form-control mr-5" id="accountSelect" onchange="selectAccount(this)" style="width:auto; margin-right: 10px;">
                            @foreach (var account in Model.UserAccounts)
                            {
                                <option value="@account.AccountNo">@account.AccountNo</option>
                            }
                        </select>
                        <div style="margin-left:auto">
                            <button class="btn btn-primary" style="margin-right: 2px;" onclick="showAccountForm()">등록</button>
                            <button class="btn btn-secondary" style="margin-right: 2px;" onclick="showEditAccountForm()">수정</button>
                            <button class="btn btn-danger" onclick="deleteAccount()">삭제</button>
                        </div>
                    </div>
                </div>
            </div>
            <div class="card" style="display:none">
                <div class="card-header">
                    <h2 class="card-title">토큰 활성화</h2>
                </div>
                <div class="card-body">
                    <div class="form-group mb-3">
                        <label for="accountSelect">현재 활성화된 토큰 정보</label>
                    </div>
                    <button class="btn btn-primary" onclick="generateToken()">토큰 생성</button>
                </div>
            </div>
            <div class="card">
                <div class="card-header">
                    <h2 class="card-title">잔고 보기 <button class="btn btn-primary" onclick="showMyStocks()">보기</button></h2>
                </div>
                <div class="card-body">
                    
                    <div class="form-group mb-3">
                        <table class="table table-striped table-bordered table-hover" id="stockTable">
                            <thead class="thead-dark">
                                <tr>
                                    <th>No</th>
                                    <th>코드번호</th>
                                    <th>종목명</th>
                                    <th>현재가</th>
                                    <th>평단가</th>
                                    <th>보유수량</th>
                                    <th>총매입가</th>
                                    <th>평가손익</th>
                                </tr>
                            </thead>
                            <tbody>
                                @Html.Raw(Model.MyStocks)
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
            <div class="card">
                <div class="card-header">
                    <h2 class="card-title">보유 정보</h2>
                </div>
                <div class="card-body">
                    <div class="form-group mb-3">
                        <label for="accountSelect">정보등록</label>
                        <table id="tblStockList">
                            <tr>
                                <th>코드</th>
                                <th>이름</th>
                                <th>평단</th>
                                <th>수량</th>
                                <th>현재가</th>
                                <th>수정/삭제</th>   
                            </tr>
                        </table>
                    </div>
                    <button class="btn btn-primary" onclick="showStockForm()">정보 등록</button>
                </div>
                
            </div>
        </div>
    </div>
</div>

<!-- 계좌 등록 레이어 -->
<div id="accountFormLayer" class="modal" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">계좌 등록</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" onclick="hideAccountForm()">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form method="post" asp-page-handler="EnrollAccount">
                    <div class="form-group mb-3">
                        <label for="accountNo">계좌번호 <font color="red">*</font></label>
                        <input type="text" class="form-control" id="accountNo" name="AccountNo" required />
                    </div>
                    <div class="form-group mb-3">
                        <label for="appKey">appKey <font color="red">*</font></label>
                        <input type="text" class="form-control" id="appKey" name="AppKey" required />
                    </div>
                    <div class="form-group mb-3">
                        <label for="appSecret">appSecret</label>
                        <input type="text" class="form-control" id="appSecret" name="AppSecret" />
                    </div>
                    <button type="submit" class="btn btn-primary">등록</button>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- 계좌 수정 레이어 -->
<div id="editAccountFormLayer" class="modal" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">계좌 수정</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" onclick="hideEditAccountForm()">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form method="post" asp-page-handler="EditAccount">
                    <div class="form-group mb-3">
                        <label for="editAccountNo">계좌번호 <font color="red">*</font></label>
                        <input type="text" class="form-control" id="editAccountNo" name="AccountNo" readonly />
                    </div>
                    <div class="form-group mb-3">
                        <label for="editAppKey">appKey <font color="red">*</font></label>
                        <input type="text" class="form-control" id="editAppKey" name="AppKey" required />
                    </div>
                    <div class="form-group mb-3">
                        <label for="editAppSecret">appSecret</label>
                        <input type="text" class="form-control" id="editAppSecret" name="AppSecret" />
                    </div>
                    <button type="submit" class="btn btn-primary">수정</button>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- 계좌 삭제 -->
<form id="deleteAccountForm" method="post" asp-page-handler="DeleteAccount">
    <input type="hidden" id="deleteAccountNo" name="AccountNo" />
</form>

<!-- 토큰 생성 -->
<form id="tokenForm" method="post" asp-page-handler="GenerateToken">
    <input type="hidden" id="tokenAccountNo" name="AccountNo" />
    <input type="hidden" id="tokenAppKey" name="AppKey" />
    <input type="hidden" id="tokenAppSecret" name="AppSecret" />
</form>

<!-- 잔고 보기 -->
<form id="myStocksForm" method="post" asp-page-handler="ShowMyStocks">
    <input type="hidden" id="myStocksAccountNo" name="AccountNo" />
    <input type="hidden" id="myStocksAppKey" name="AppKey" />
    <input type="hidden" id="myStocksAppSecret" name="AppSecret" />
</form>

<!-- 주식 등록 레이어 -->
<div id="stockFormLayer" class="modal" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">등록</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" onclick="hideStockForm()">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form method="post" asp-page-handler="EnrollStock">
                    <div class="form-group mb-3">
                        <label for="stockCode">코드번호 <font color="red">*</font></label>
                        <input type="text" class="form-control" id="stockCode" name="stockCode" required />
                    </div>
                    <div class="form-group mb-3">
                        <label for="stockName">이름 <font color="red">*</font></label>
                        <input type="text" class="form-control" id="stockName" name="stockName" required />
                    </div>
                    <div class="form-group mb-3">
                        <label for="stockBuyPrice">평단</label>
                        <input type="number" class="form-control" id="stockBuyPrice" name="stockBuyPrice" />
                    </div>
                    <div class="form-group mb-3">
                        <label for="stockBuyCount">수량</label>
                        <input type="number" class="form-control" id="stockBuyCount" name="stockBuyCount" />
                    </div>
                    <button type="submit" class="btn btn-primary">등록</button>
                </form>
            </div>
        </div>
    </div>
</div>

<script>
    function showAccountForm() {
        document.getElementById('accountFormLayer').style.display = 'block';
    }

    function hideAccountForm() {
        document.getElementById('accountFormLayer').style.display = 'none';
    }

    function showEditAccountForm() {
        var selectedAccountNo = document.getElementById('accountSelect').value;
        if (!selectedAccountNo) {
            alert('수정할 계좌를 선택하세요.');
            return;
        }

        var selectedAccount = @Html.Raw(JsonSerializer.Serialize(Model.UserAccounts))
                .find(account => account.AccountNo === selectedAccountNo);

        document.getElementById('editAccountNo').value = selectedAccount.AccountNo;
        document.getElementById('editAppKey').value = selectedAccount.AppKey;
        document.getElementById('editAppSecret').value = selectedAccount.AppSecret;

        document.getElementById('editAccountFormLayer').style.display = 'block';
    }

    function hideEditAccountForm() {
        document.getElementById('editAccountFormLayer').style.display = 'none';
    }

    function deleteAccount() {
        var selectedAccountNo = document.getElementById('accountSelect').value;
        if (!selectedAccountNo) {
            alert('삭제할 계좌를 선택하세요.');
            return;
        }

        if (confirm('정말로 이 계좌를 삭제하시겠습니까?')) {
            document.getElementById('deleteAccountNo').value = selectedAccountNo;
            document.getElementById('deleteAccountForm').submit();
        }
    }

    function generateToken() {
        var selectedAccountNo = document.getElementById('accountSelect').value;
        if (!selectedAccountNo) {
            alert('토큰을 생성할 계좌를 선택하세요.');
            return;
        }

        var selectedAccount = @Html.Raw(JsonSerializer.Serialize(Model.UserAccounts))
                    .find(account => account.AccountNo === selectedAccountNo);

        document.getElementById('tokenAccountNo').value = selectedAccount.AccountNo;
        document.getElementById('tokenAppKey').value = selectedAccount.AppKey;
        document.getElementById('tokenAppSecret').value = selectedAccount.AppSecret;

        document.getElementById('tokenForm').submit();
    }

    function showMyStocks() {
        var selectedAccountNo = document.getElementById('accountSelect').value;
        if (!selectedAccountNo) {
            alert('잔고를 확인할 계좌를 선택하세요.');
            return;
        }

        var selectedAccount = @Html.Raw(JsonSerializer.Serialize(Model.UserAccounts))
                        .find(account => account.AccountNo === selectedAccountNo);

        document.getElementById('myStocksAccountNo').value = selectedAccount.AccountNo;
        document.getElementById('myStocksAppKey').value = selectedAccount.AppKey;
        document.getElementById('myStocksAppSecret').value = selectedAccount.AppSecret;

        document.getElementById('myStocksForm').submit();
    }

    function showStockForm() {
        document.getElementById('stockFormLayer').style.display = 'block';
    }

    function hideStockForm() {
        document.getElementById('stockFormLayer').style.display = 'none';
    }
</script>

<style>
    .modal {
        display: none;
        position: fixed;
        z-index: 1;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        overflow: auto;
        background-color: rgb(0,0,0);
        background-color: rgba(0,0,0,0.4);
    }

    .modal-dialog {
        margin: 15% auto;
        padding: 20px;
        width: 80%;
    }

    .highlight {
        color: red !important;
    }
</style>
@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        // 서버에서 전달된 오류 메시지를 alert으로 표시
        @if (Model.Result != null)
        {
            <text>
                alert('@Html.Raw(Model.Result)');
            </text>
        }

        $(document).ready(function () {
            
            let table = new DataTable('#stockTable', {
                // options
            });
            
            //$('#stockTable').DataTable();
        });
    </script>
}